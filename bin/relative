#!/bin/sh

# Usage: rellink [-f] dir|file target_dir

set -eu

#######################################
# show error and exit
# Arguments:
#  None
#######################################
die() { Error "${0##*/}:" "$@" >&2; exit 1; }

#######################################
# absolute path
# Arguments:
#   1
#######################################
get_absolute_dir() ( cd "$1" && pwd )

#######################################
# get part of path from index
# Arguments:
#   1
#   2
#######################################
get_value() { echo "$1" | cut -d "/" -f "$2"; }

#######################################
# show usage
# Arguments:
#   1
#######################################
help() {
  test $# -eq 0 || case "$1" in
    -h|--help|help) rc=0 ;;
    *) return 0 ;;
  esac
  command="$(red ${0##*/})"
  >&2 cat <<EOF
usage: ${command} [-d|--dry] [-f|--force] <source-dir|source-file> <target-dir|target-file>
   or: ${command} [-h|--help|help]

creates relative symlinks from destination directory

no changes are done if symlink is pointing to source

Arguments:
  source              source directory or file.
  target              target directory or file.
  -f|--force          forces removal of target if exists
  -d|--dry            show what would be executed but do not link

Commands:
   -h, --help, help   display this help and exit.

Examples:
  $ touch /tmp/source_file && ${command} /tmp/source_file /tmp/1/2/3/target_file
  $ ls -la  /tmp/1/2/3/target_file
   "ln -s ../../../source_file target_file"
  $ mkdir -p /tmp/source_dir && ${command} /tmp/source_dir /tmp/1/2/target_dir
  $ ls -la /tmp/1/2/target_dir
   "ln -s ../../source_dir target_dir"
  $ mkdir -p /tmp/1/2/3 && touch /tmp/1/2/3/source_file && ${command} /tmp/1/2/3/source_file /tmp/2/target_file
  $ ls -la /tmp/2/target_file
   "ln -s ../1/2/3/source_file target_file"
  $ mkdir -p /tmp/1/2/source_dir && ${command} /tmp/1/2/source_dir /tmp/2/target_dir
  $ ls -la /tmp/2/target_dir
   "ln -s ../1/2/source_dir target_dir"
  $ touch /tmp/1/2/source_file && ${command} /tmp/1/2/source_file /tmp/1/2/target_file
  $ ls -la /tmp/1/2/target_file
   "ln -s ./source_file target_file"
  $ mkdir -p /tmp/1/2/3/source_dir && ${command} /tmp/1/2/3/source_dir /tmp/1/2/3/target_dir
  $ la -la  /tmp/1/2/3/target_dir
   "ln -s ./source_dir target_dir"

  $ ${command} /bin/ls /tmp/1/ls
  $ ls -la /tmp/1/ls
   "ln -s /bin/ls /tmp/1/ls"
  $ ${command} /usr/bin /tmp/1/sbin
  $ ls -la /tmp/1/sbin
   "ln -s /bin/ls /tmp/1/sbin"  JEDITERM_SOURCE  TERMINAL_EMULATOR
EOF
  exit "${rc:-1}"
}

#######################################
# execute command without sudo and with sudo if error
# Globals:
#   SUDO
# Arguments:
#  None
#######################################
with_sudo() {
  if [ "${SUDO}" ]; then
     "$@" 2>/dev/null || "${SUDO}" "$@"
  else
    "$@"
  fi
}

#######################################
# description
# Arguments:
#   1
#   2
#   3
# Examples:
#   $ touch /tmp/source_file && relative /tmp/source_file /tmp/1/2/3/target_file
#   $ ls -la  /tmp/1/2/3/target_file
#     "ln -s ../../../source_file target_file"
#   $ mkdir -p /tmp/source_dir && relative /tmp/source_dir /tmp/1/2/target_dir
#   $ ls -la /tmp/1/2/target_dir
#     "ln -s ../../source_dir target_dir"
#   $ mkdir -p /tmp/1/2/3 && touch /tmp/1/2/3/source_file && relative /tmp/1/2/3/source_file /tmp/2/target_file
#   $ ls -la /tmp/2/target_file
#     "ln -s ../1/2/3/source_file target_file"
#   $ mkdir -p /tmp/1/2/source_dir && relative /tmp/1/2/source_dir /tmp/2/target_dir
#   $ ls -la /tmp/2/target_dir
#     "ln -s ../1/2/source_dir target_dir"

#   $ touch /tmp/1/2/source_file && relative /tmp/1/2/source_file /tmp/1/2/target_file
#   $ ls -la /tmp/1/2/target_file
#     "ln -s ./source_file target_file"
#   $ mkdir -p /tmp/1/2/3/source_dir && relative /tmp/1/2/3/source_dir /tmp/1/2/3/target_dir
#   $ la -la  /tmp/1/2/3/target_dir
#     "ln -s ./source_dir target_dir"
#   $ relative /bin/ls /tmp/1/ls
#   $ ls -la /tmp/1/ls
#     "ln -s /bin/ls /tmp/1/ls"
#   $ relative /usr/bin /tmp/1/sbin
#   $ ls -la /tmp/1/sbin
#     "ln -s /usr/bin /tmp/1/sbin"  JEDITERM_SOURCE  TERMINAL_EMULATOR
#######################################
main() {
  SUDO="$(command -v sudo || true)"

  echo=""; force=false;

  case "$1" in
    -f|--force) force=true; shift ;;
    -h|--help|help) help "$@";;
    -d|--dry) echo="echo"; shift ;;
  esac
  source_relative="$(echo "$1" | sed 's|/$||')"
  target_relative="$(echo "$2" | sed 's|/$||')"
  
  test -d "${source_relative}" || test -f  "${source_relative}" || die "${source_relative} must be a directory/file"

  source_dirname="$(get_absolute_dir "$(dirname "${source_relative}")")"
  source_basename="${source_relative##*/}"
  SOURCE_ABSOLUTE="${source_dirname}/${source_basename}"

  target_relative_dirname="$(dirname "${target_relative}")"
  target_basename="${target_relative##*/}"
  with_sudo mkdir -p "${target_relative_dirname}"
  target_dirname="$(get_absolute_dir "${target_relative_dirname}")"
  TARGET_ABSOLUTE="${target_dirname}/${target_basename}"

  [ "${SOURCE_ABSOLUTE}" != "${TARGET_ABSOLUTE}" ] || die "${TARGET_ABSOLUTE} source and target are identical"
  ! test -h "${TARGET_ABSOLUTE}" || [ "$(realpath "${TARGET_ABSOLUTE}")" != "${SOURCE_ABSOLUTE}" ] || exit 0 # nothing to do

  ! $force || if with_sudo rm -rf "${TARGET_ABSOLUTE}"; then
      Warning "${0##*/}:" "${TARGET_ABSOLUTE} removed"
    else
      die "${0##*/}:" "${TARGET_ABSOLUTE} can't be removed"
    fi

  ! test -w "${target_dirname}" || SUDO=""

  cd "${target_dirname}"

  source_remaining="${SOURCE_ABSOLUTE}"
  target_remaining="${TARGET_ABSOLUTE}"

  i=2
  common_part=""
  source_part="$(get_value "${SOURCE_ABSOLUTE}" $i)"
  target_part="$(get_value "${TARGET_ABSOLUTE}" $i)"


  while [ "${source_part}" = "${target_part}" ]; do
    common_part="${common_part}/${source_part}"
    i=$((i + 1))
    source_part="$(get_value "${SOURCE_ABSOLUTE}" $i)"
    target_part="$(get_value "${TARGET_ABSOLUTE}" $i)"
    source_remaining="$(echo "${SOURCE_ABSOLUTE}" | sed "s|${common_part}||")"
    target_remaining="$(echo "${TARGET_ABSOLUTE}" | sed "s|${common_part}||")"
  done

  if [ ! "${common_part-}" ]; then
    from="${SOURCE_ABSOLUTE}"
    to="${TARGET_ABSOLUTE}"
  elif [ "${source_dirname}" = "${target_dirname}" ] ; then
    from="./${source_basename}"
    to="${target_basename}"
  else
    source_basename="${source_remaining##*/}"
    target_basename="${target_remaining##*/}"
    source_remaining="$(echo "${source_remaining}" | sed "s|/${source_basename}||")"
    target_remaining="$(echo "${target_remaining}" | sed "s|/${target_basename}||")"

    i=2
    prepend_to_source=""
    target_part="$(get_value "${target_remaining}" $i)"
    while [ "${target_part}" != "" ]; do
      prepend_to_source="../${prepend_to_source}"
      i=$((i + 1))
      target_part="$(get_value "${target_remaining}" $i)"
    done

    i=2
    append_to_source=""
    source_part="$(get_value "${source_remaining}" $i)"
    while [ "${source_part}" != "" ]; do
      append_to_source="${append_to_source:+${append_to_source}/}${source_part}"
      i=$((i + 1))
      source_part="$(get_value "${source_remaining}" $i)"
    done

    from="${prepend_to_source}${append_to_source:+${append_to_source}/}${source_basename}"
    to="${target_basename}"
  fi

  ${echo} with_sudo ln -s "${from}" "${to}" || die "symlink can not be created"
  FromTo ln "${from}" "${to}"
}

main "$@"
